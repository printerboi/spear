        -:    0:Source:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/main.cpp
        -:    0:Graph:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/cmake-build-debug-coverage/CMakeFiles/ba.dir/main.cpp.gcno
        -:    0:Data:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/cmake-build-debug-coverage/CMakeFiles/ba.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <cstring>
        -:    2:#include "src/main/include/Profiler/Profiler.h"
        -:    3:#include "src/main/include/LLVM-Handler/LLVMHandler.h"
        -:    4:#include "src/main/include/LLVM-Handler/InstructionCategory.h"
        -:    5:#include "src/main/include/JSON-Handler/JSONHandler.h"
        -:    6:#include "src/main/passes/energy/energy.cpp"
        -:    7:
        -:    8:#include "iostream"
        -:    9:#include "filesystem"
        -:   10:#include <chrono>
        -:   11:#include "llvm/Passes/PassBuilder.h"
        -:   12:#include "llvm/Analysis/RegionPass.h"
        -:   13:#include "llvm/Transforms/Utils/InstructionNamer.h"
        -:   14:#include "llvm/Transforms/Utils/Mem2Reg.h"
        -:   15:#include "llvm/Transforms/Scalar/LoopRotation.h"
        -:   16:
function main called 1 returned 100% blocks executed 3%
        1:   17:int main(int argc, const char **argv){
        -:   18:    std::string helpString = "Usage: ba option <arguments>\n==============================\nOptions:"
        -:   19:                             "\n\t-b\t Benchmarks the system and generates the energy values used for any further analysis"
        -:   20:                             "\n\t-a\t ..."
        1:   21:                             "\n\t-d\t Debug. Please provide a energy JSON file followed by the IR code .ll ";
        1:   21-block  0
Aufruf  0 gab 1 zurück
Aufruf  1 gab 1 zurück
Zweig  2 wurde genommen: 1 (fallthrough)
Zweig  3 wurde genommen: 0 (throw)
        1:   21-block  1
Aufruf  4 gab 1 zurück
    $$$$$:   21-block  2
Aufruf  5 niemals ausgeführt
    $$$$$:   21-block  3
        -:   22:
        1:   23:    if( argc >= 2 ){
Zweig  0 wurde genommen: 0 (fallthrough)
Zweig  1 wurde genommen: 1
    #####:   24:        if( std::strcmp( argv[1], "-b" ) == 0 && argc == 4 ){
    %%%%%:   24-block  0
Zweig  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
    %%%%%:   24-block  1
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
        -:   25:            try {
        -:   26:                //Get the parameters from the arguments
    #####:   27:                int rep = std::stoi( argv[2] );
    %%%%%:   27-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:   27-block  1
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   27-block  2
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
    $$$$$:   27-block  3
Aufruf  9 niemals ausgeführt
    $$$$$:   27-block  4
Aufruf 10 niemals ausgeführt
    $$$$$:   27-block  5
    $$$$$:   27-block  6
    #####:   28:                int ite = std::stoi( argv[3] );
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:   28-block  0
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   28-block  1
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
    $$$$$:   28-block  2
Aufruf  9 niemals ausgeführt
    $$$$$:   28-block  3
Aufruf 10 niemals ausgeführt
    $$$$$:   28-block  4
    $$$$$:   28-block  5
        -:   29:
        -:   30:                //Create a Profiler-object
    #####:   31:                Profiler B = Profiler(ite, rep);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   32:
    #####:   33:                std::cout << "Starting the profile..." << std::endl;
    %%%%%:   33-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   33-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
        -:   34:
        -:   35:                //Start the time measurement
    #####:   36:                auto start = std::chrono::system_clock::now();
    %%%%%:   36-block  0
Aufruf  0 niemals ausgeführt
        -:   37:                //Launch the benchmarking
    #####:   38:                std::vector<double> result = B.profile();
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   39:                //Stop the time measurement
    #####:   40:                auto end = std::chrono::system_clock::now();
    %%%%%:   40-block  0
Aufruf  0 niemals ausgeführt
        -:   41:                //Calculate the elapsed time by substracting the two timestamps
    #####:   42:                std::chrono::duration<double> timerun = end - start;
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   42-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    $$$$$:   42-block  1
        -:   43:
        -:   44:                //Group the vector format of the results
        -:   45:                std::vector<std::pair<std::string, double>> data = {
    #####:   46:                        {InstructionCategory::toString(InstructionCategory::Category::MEMSTORE), result[0]},
    %%%%%:   46-block  0
Aufruf  0 niemals ausgeführt
    $$$$$:   46-block  1
Aufruf  1 niemals ausgeführt
    $$$$$:   46-block  2
    #####:   47:                        {InstructionCategory::toString(InstructionCategory::Category::MEMLOAD), result[0]},
    %%%%%:   47-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    $$$$$:   47-block  1
Aufruf  2 niemals ausgeführt
    $$$$$:   47-block  2
    #####:   48:                        {InstructionCategory::toString(InstructionCategory::Category::PROGRAMFLOW), result[1]},
    %%%%%:   48-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    $$$$$:   48-block  1
Aufruf  2 niemals ausgeführt
    $$$$$:   48-block  2
    #####:   49:                        {InstructionCategory::toString(InstructionCategory::Category::DIVISION), result[2]},
    %%%%%:   49-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    $$$$$:   49-block  1
Aufruf  2 niemals ausgeführt
    $$$$$:   49-block  2
    #####:   50:                        {InstructionCategory::toString(InstructionCategory::Category::OTHER), result[3]},
    %%%%%:   50-block  0
Aufruf  0 niemals ausgeführt
    %%%%%:   50-block  1
Aufruf  1 niemals ausgeführt
Aufruf  2 niemals ausgeführt
    $$$$$:   50-block  2
Aufruf  3 niemals ausgeführt
    $$$$$:   50-block  3
    #####:   51:                        {"Base", result[4]},
    #####:   52:                };
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   52-block  0
Aufruf  3 niemals ausgeführt
    %%%%%:   52-block  1
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   52-block  2
Aufruf  6 niemals ausgeführt
    $$$$$:   52-block  3
Aufruf  7 niemals ausgeführt
    $$$$$:   52-block  4
    $$$$$:   52-block  5
    $$$$$:   52-block  6
Zweig  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
    $$$$$:   52-block  7
Aufruf 10 niemals ausgeführt
    $$$$$:   52-block  8
        -:   53:                //Pass the grouped values to the csv handler, so it can be written to a file
        -:   54:                //CSVHandler::writeCSV("benchmarkresult.csv", ',' , data);
    #####:   55:                JSONHandler::write("benchmarkresult.json", data);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   55-block  0
Aufruf  3 niemals ausgeführt
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   55-block  1
Aufruf  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
    %%%%%:   55-block  2
Aufruf 10 niemals ausgeführt
Aufruf 11 niemals ausgeführt
Aufruf 12 niemals ausgeführt
    $$$$$:   55-block  3
Aufruf 13 niemals ausgeführt
    $$$$$:   55-block  4
Aufruf 14 niemals ausgeführt
    $$$$$:   55-block  5
    $$$$$:   55-block  6
    $$$$$:   55-block  7
Aufruf 15 niemals ausgeführt
    $$$$$:   55-block  8
        -:   56:
    #####:   57:                std::cout << "Benchmark finished!" << std::endl;
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   57-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    #####:   58:                std::cout << "Elapsed Time: " << timerun.count() << "s" << std::endl;
    %%%%%:   58-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   58-block  1
Aufruf  3 niemals ausgeführt
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   58-block  2
Aufruf  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
    %%%%%:   58-block  3
Aufruf 10 niemals ausgeführt
Zweig 11 niemals ausgeführt
Zweig 12 niemals ausgeführt
    #####:   59:            }catch( std::invalid_argument &iv ){
    %%%%%:   59-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    $$$$$:   59-block  1
Aufruf  2 niemals ausgeführt
    $$$$$:   59-block  2
Aufruf  3 niemals ausgeführt
    $$$$$:   59-block  3
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    $$$$$:   59-block  4
Aufruf  6 niemals ausgeführt
    =====:   60:                std::cerr << "The given arguments are not useable as ints";
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    =====:   61:                return 1;
    =====:   62:            }
    $$$$$:   62-block  0
Aufruf  0 niemals ausgeführt
    $$$$$:   62-block  1
Aufruf  1 niemals ausgeführt
    #####:   63:        }else if( std::strcmp( argv[1], "-a" ) == 0 && argc == 4 ) {
    %%%%%:   63-block  0
Zweig  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
    %%%%%:   63-block  1
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    #####:   64:            std::cout << "Not yet implemented" << std::endl;
    %%%%%:   64-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   64-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   64-block  2
    #####:   65:        }else if(std::strcmp( argv[1], "-d" ) == 0 && argc == 4){
    %%%%%:   65-block  0
Zweig  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
    %%%%%:   65-block  1
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    #####:   66:            llvm::LLVMContext context;
    %%%%%:   66-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   67:            llvm::SMDiagnostic error;
    %%%%%:   67-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   68:            llvm::PassBuilder passBuilder;
    %%%%%:   68-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:   68-block  1
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   68-block  2
Aufruf  7 niemals ausgeführt
    $$$$$:   68-block  3
    $$$$$:   68-block  4
Aufruf  8 niemals ausgeführt
    $$$$$:   68-block  5
    #####:   69:            llvm::LoopAnalysisManager loopAnalysisManager;
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   70:            llvm::FunctionAnalysisManager functionAnalysisManager;
    %%%%%:   70-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   71:            llvm::CGSCCAnalysisManager cGSCCAnalysisManager;
    %%%%%:   71-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   72:            llvm::ModuleAnalysisManager moduleAnalysisManager;
    %%%%%:   72-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   73:            llvm::ModulePassManager modulePassManager;
    %%%%%:   73-block  0
Aufruf  0 niemals ausgeführt
    #####:   74:            llvm::FunctionPassManager functionPassManager;
Aufruf  0 niemals ausgeführt
        -:   75:
    #####:   76:            if( std::filesystem::exists(argv[2]) && std::filesystem::exists(argv[3] )){
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   76-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   76-block  1
Zweig  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
    %%%%%:   76-block  2
Aufruf  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
    %%%%%:   76-block  3
Aufruf 11 niemals ausgeführt
Zweig 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
    %%%%%:   76-block  4
Zweig 14 niemals ausgeführt
Zweig 15 niemals ausgeführt
    %%%%%:   76-block  5
    %%%%%:   76-block  6
    %%%%%:   76-block  7
Zweig 16 niemals ausgeführt
Zweig 17 niemals ausgeführt
    %%%%%:   76-block  8
Aufruf 18 niemals ausgeführt
    %%%%%:   76-block  9
Zweig 19 niemals ausgeführt
Zweig 20 niemals ausgeführt
    %%%%%:   76-block 10
Aufruf 21 niemals ausgeführt
    %%%%%:   76-block 11
Zweig 22 niemals ausgeführt
Zweig 23 niemals ausgeführt
    $$$$$:   76-block 12
Zweig 24 niemals ausgeführt
Zweig 25 niemals ausgeführt
    $$$$$:   76-block 13
Aufruf 26 niemals ausgeführt
    $$$$$:   76-block 14
    $$$$$:   76-block 15
Zweig 27 niemals ausgeführt
Zweig 28 niemals ausgeführt
    $$$$$:   76-block 16
Aufruf 29 niemals ausgeführt
    $$$$$:   76-block 17
    #####:   77:                auto module_up = std::move(llvm::parseIRFile(argv[3], error, context));
    %%%%%:   77-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:   77-block  1
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   77-block  2
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
Aufruf  9 niemals ausgeführt
    $$$$$:   77-block  3
    $$$$$:   77-block  4
    $$$$$:   77-block  5
    $$$$$:   77-block  6
        -:   78:
    #####:   79:                passBuilder.registerModuleAnalyses(moduleAnalysisManager);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   80:                passBuilder.registerCGSCCAnalyses(cGSCCAnalysisManager);
    %%%%%:   80-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   81:                passBuilder.registerFunctionAnalyses(functionAnalysisManager);
    %%%%%:   81-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   82:                passBuilder.registerLoopAnalyses(loopAnalysisManager);
    %%%%%:   82-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   83:                passBuilder.crossRegisterProxies(
    %%%%%:   83-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   84:                        loopAnalysisManager, functionAnalysisManager, cGSCCAnalysisManager,
        -:   85:                        moduleAnalysisManager);
        -:   86:
        -:   87:
    #####:   88:                for(auto & F : module_up->getFunctionList()){
    %%%%%:   88-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Aufruf  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
    %%%%%:   88-block  1
Aufruf  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
    %%%%%:   88-block  2
    %%%%%:   88-block  3
Aufruf  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
    %%%%%:   88-block  4
Aufruf 11 niemals ausgeführt
Zweig 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
    %%%%%:   88-block  5
Aufruf 14 niemals ausgeführt
Zweig 15 niemals ausgeführt
Zweig 16 niemals ausgeführt
    #####:   89:                    if( F.getName() == "main" ){
    %%%%%:   89-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   89-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   89-block  2
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    $$$$$:   89-block  3
        -:   90:
        -:   91:                        //instname
    #####:   92:                        functionPassManager.addPass(llvm::InstructionNamerPass());
    %%%%%:   92-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    $$$$$:   92-block  1
        -:   93:                        //mem2reg
    #####:   94:                        functionPassManager.addPass(llvm::PromotePass());
    %%%%%:   94-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    $$$$$:   94-block  1
        -:   95:
        -:   96:                        //instcombine
        -:   97:                        //functionPassManager.addPass(llvm::InstCombinePass());
        -:   98:                        //loop-simplify
    #####:   99:                        functionPassManager.addPass(llvm::LoopSimplifyPass());
    %%%%%:   99-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    $$$$$:   99-block  1
        -:  100:
        -:  101:                        //loop-rotate
    #####:  102:                        functionPassManager.addPass( llvm::createFunctionToLoopPassAdaptor(llvm::LoopRotatePass()) );
    %%%%%:  102-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  102-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:  102-block  2
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    %%%%%:  102-block  3
Aufruf  9 niemals ausgeführt
    $$$$$:  102-block  4
Aufruf 10 niemals ausgeführt
    $$$$$:  102-block  5
    $$$$$:  102-block  6
        -:  103:
    #####:  104:                        functionPassManager.addPass(Energy(argv[2]));
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:  104-block  0
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:  104-block  1
Aufruf  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
    %%%%%:  104-block  2
Aufruf 10 niemals ausgeführt
Aufruf 11 niemals ausgeführt
Aufruf 12 niemals ausgeführt
    $$$$$:  104-block  3
Aufruf 13 niemals ausgeführt
    $$$$$:  104-block  4
Aufruf 14 niemals ausgeführt
    $$$$$:  104-block  5
Aufruf 15 niemals ausgeführt
    $$$$$:  104-block  6
    $$$$$:  104-block  7
    $$$$$:  104-block  8
    #####:  105:                        functionPassManager.run(F, functionAnalysisManager);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  105-block  0
Aufruf  3 niemals ausgeführt
    $$$$$:  105-block  1
        -:  106:                    }
        -:  107:                }
    #####:  108:            }else{
    %%%%%:  108-block  0
Aufruf  0 niemals ausgeführt
    $$$$$:  108-block  1
Aufruf  1 niemals ausgeführt
    #####:  109:                std::cerr << helpString;
    %%%%%:  109-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:  110:                return 1;
    %%%%%:  110-block  0
        -:  111:            }
    #####:  112:        }else{
    %%%%%:  112-block  0
    %%%%%:  112-block  1
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  112-block  2
    %%%%%:  112-block  3
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:  112-block  4
    %%%%%:  112-block  5
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    %%%%%:  112-block  6
    %%%%%:  112-block  7
Aufruf  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
Zweig 11 niemals ausgeführt
    %%%%%:  112-block  8
    %%%%%:  112-block  9
Aufruf 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
Zweig 14 niemals ausgeführt
    %%%%%:  112-block 10
    %%%%%:  112-block 11
Aufruf 15 niemals ausgeführt
Zweig 16 niemals ausgeführt
Zweig 17 niemals ausgeführt
    %%%%%:  112-block 12
    %%%%%:  112-block 13
Aufruf 18 niemals ausgeführt
Zweig 19 niemals ausgeführt
Zweig 20 niemals ausgeführt
    %%%%%:  112-block 14
    %%%%%:  112-block 15
Aufruf 21 niemals ausgeführt
Zweig 22 niemals ausgeführt
Zweig 23 niemals ausgeführt
    %%%%%:  112-block 16
    %%%%%:  112-block 17
Aufruf 24 niemals ausgeführt
Zweig 25 niemals ausgeführt
Zweig 26 niemals ausgeführt
    %%%%%:  112-block 18
    $$$$$:  112-block 19
Aufruf 27 niemals ausgeführt
    $$$$$:  112-block 20
Aufruf 28 niemals ausgeführt
    $$$$$:  112-block 21
Aufruf 29 niemals ausgeführt
    $$$$$:  112-block 22
Aufruf 30 niemals ausgeführt
    $$$$$:  112-block 23
Aufruf 31 niemals ausgeführt
    $$$$$:  112-block 24
Aufruf 32 niemals ausgeführt
    $$$$$:  112-block 25
Aufruf 33 niemals ausgeführt
    $$$$$:  112-block 26
Aufruf 34 niemals ausgeführt
    $$$$$:  112-block 27
Aufruf 35 niemals ausgeführt
    #####:  113:            std::cerr << helpString;
    %%%%%:  113-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:  114:            return 1;
    %%%%%:  114-block  0
        -:  115:        }
        -:  116:    }else{
        1:  117:        std::cerr << helpString;
        1:  117-block  0
Aufruf  0 gab 1 zurück
Zweig  1 wurde genommen: 1 (fallthrough)
Zweig  2 wurde genommen: 0 (throw)
        1:  118:        return 1;
        1:  118-block  0
        -:  119:    }
        -:  120:
    #####:  121:    return 0;
    %%%%%:  121-block  0
       1*:  122:}
    %%%%%:  122-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Aufruf  3 niemals ausgeführt
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
Aufruf 11 niemals ausgeführt
Aufruf 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
Zweig 14 niemals ausgeführt
Aufruf 15 niemals ausgeführt
Aufruf 16 niemals ausgeführt
Zweig 17 niemals ausgeführt
Zweig 18 niemals ausgeführt
Aufruf 19 niemals ausgeführt
Aufruf 20 niemals ausgeführt
Aufruf 21 niemals ausgeführt
Zweig 22 niemals ausgeführt
Zweig 23 niemals ausgeführt
    %%%%%:  122-block  1
Aufruf 24 niemals ausgeführt
        1:  122-block  2
Aufruf 25 gab 1 zurück
    $$$$$:  122-block  3
Zweig 26 niemals ausgeführt
Zweig 27 niemals ausgeführt
    $$$$$:  122-block  4
    $$$$$:  122-block  5
Zweig 28 niemals ausgeführt
Zweig 29 niemals ausgeführt
    $$$$$:  122-block  6
Aufruf 30 niemals ausgeführt
    $$$$$:  122-block  7
Aufruf 31 niemals ausgeführt
