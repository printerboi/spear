        -:    0:Source:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/src/main/passes/energy/energy.cpp
        -:    0:Graph:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/cmake-build-debug-coverage/CMakeFiles/ba.dir/main.cpp.gcno
        -:    0:Data:/home/maximiliank/Dokumente/workbench/Bachelor/bachelorarbeit/cmake-build-debug-coverage/CMakeFiles/ba.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <llvm/Passes/PassBuilder.h>
        -:    2:#include <llvm/Analysis/RegionInfo.h>
        -:    3:#include "llvm/Passes/PassPlugin.h"
        -:    4:#include "llvm/IR/Function.h"
        -:    5:#include "llvm/Support/raw_ostream.h"
        -:    6:
        -:    7:#include "llvm/IR/LegacyPassManager.h"
        -:    8:#include "llvm/Transforms/IPO/PassManagerBuilder.h"
        -:    9:#include "../../include/LLVM-Handler/LLVMHandler.h"
        -:   10:#include "llvm/Support/CommandLine.h"
        -:   11:#include "llvm/Support/FileSystem.h"
        -:   12:#include "llvm/Analysis/PostDominators.h"
        -:   13:#include "../../include/JSON-Handler/JSONHandler.h"
        -:   14:#include "../../include/ProgramTree/ProgramTree.h"
        -:   15:
        -:   16:
        -:   17:llvm::cl::opt<std::string> energyModelPath("m", llvm::cl::desc("Energymodel as JSON"), llvm::cl::value_desc("filepath to .json file"));
        -:   18:
        -:   19:struct Energy : llvm::PassInfoMixin<Energy> {
        -:   20:    Json::Value energyJson;
        -:   21:    int MAXITERATIONS = 1000;
        -:   22:
        -:   23:
function _ZN6EnergyC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   24:    explicit Energy(std::string filename){
    %%%%%:   24-block  0
Aufruf  0 niemals ausgeführt
    #####:   25:        if( llvm::sys::fs::exists( filename ) && !llvm::sys::fs::is_directory( filename ) ){
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   25-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   25-block  1
Zweig  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
    %%%%%:   25-block  2
Aufruf  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
    %%%%%:   25-block  3
Aufruf 11 niemals ausgeführt
Zweig 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
    %%%%%:   25-block  4
Zweig 14 niemals ausgeführt
Zweig 15 niemals ausgeführt
    %%%%%:   25-block  5
    %%%%%:   25-block  6
    %%%%%:   25-block  7
Zweig 16 niemals ausgeführt
Zweig 17 niemals ausgeführt
    $$$$$:   25-block  8
    $$$$$:   25-block  9
        -:   26:            //Create a JSONHandler object and read in the energypath
    #####:   27:            this->energyJson = JSONHandler::read( filename );
    %%%%%:   27-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   27-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   27-block  2
Aufruf  6 niemals ausgeführt
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
    $$$$$:   27-block  3
Aufruf  9 niemals ausgeführt
    $$$$$:   27-block  4
    $$$$$:   27-block  5
        -:   28:        }
    #####:   29:    }
    %%%%%:   29-block  0
    $$$$$:   29-block  1
Aufruf  0 niemals ausgeführt
        -:   30:
function _ZN6EnergyC2Ev called 0 returned 0% blocks executed 0%
    #####:   31:    Energy(){
    %%%%%:   31-block  0
Aufruf  0 niemals ausgeführt
    #####:   32:        if( llvm::sys::fs::exists( energyModelPath ) && !llvm::sys::fs::is_directory( energyModelPath ) ){
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   32-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   32-block  1
Zweig  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
    %%%%%:   32-block  2
Aufruf  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
    %%%%%:   32-block  3
Aufruf 11 niemals ausgeführt
Zweig 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
    %%%%%:   32-block  4
Zweig 14 niemals ausgeführt
Zweig 15 niemals ausgeführt
    %%%%%:   32-block  5
    %%%%%:   32-block  6
    %%%%%:   32-block  7
Zweig 16 niemals ausgeführt
Zweig 17 niemals ausgeführt
    $$$$$:   32-block  8
    $$$$$:   32-block  9
        -:   33:            //Create a JSONHandler object and read in the energypath
    #####:   34:            this->energyJson = JSONHandler::read( energyModelPath );
    %%%%%:   34-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   34-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   34-block  2
Aufruf  6 niemals ausgeführt
Aufruf  7 niemals ausgeführt
Aufruf  8 niemals ausgeführt
    $$$$$:   34-block  3
Aufruf  9 niemals ausgeführt
    $$$$$:   34-block  4
    $$$$$:   34-block  5
        -:   35:        }
    #####:   36:    }
    %%%%%:   36-block  0
    $$$$$:   36-block  1
Aufruf  0 niemals ausgeführt
        -:   37:
        -:   38:    void visitor(const llvm::Region &region){
        -:   39:        llvm::outs() << region.getNameStr() << "\n";
        -:   40:        for (auto &it : region) {
        -:   41:            auto subregion = it.get();
        -:   42:            visitor(*subregion);
        -:   43:        }
        -:   44:    }
        -:   45:
        -:   46:
        -:   47:
        -:   48:    /**
        -:   49:     * Main runner of the energy pass. The pass will apply function-wise.
        -:   50:     * @param F Reference to a function
        -:   51:     * @param FAM Reference to a FunctionAnalysisManager
        -:   52:     */
function _ZN6Energy3runERN4llvm8FunctionERNS0_15AnalysisManagerIS1_JEEE called 0 returned 0% blocks executed 0%
    #####:   53:    llvm::PreservedAnalyses run(llvm::Function &F, llvm::FunctionAnalysisManager &FAM) {
    #####:   54:        if(this->energyJson){
    %%%%%:   54-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   55:            //Init the Handler so we hand it to the ProgramTree later on
    #####:   56:            LLVMHandler handler = LLVMHandler( this->energyJson, MAXITERATIONS );
    %%%%%:   56-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   56-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   56-block  2
Aufruf  6 niemals ausgeführt
    $$$$$:   56-block  3
Aufruf  7 niemals ausgeführt
    $$$$$:   56-block  4
        -:   57:
        -:   58:            //Run the Loop-Analysis
    #####:   59:            auto* DT = new llvm::DominatorTree();
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   59-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    $$$$$:   59-block  1
Zweig  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
    $$$$$:   59-block  2
Aufruf  8 niemals ausgeführt
    #####:   60:            DT->recalculate(F);
    %%%%%:   60-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   61:            auto &KLoop = FAM.getResult<llvm::LoopAnalysis>(F);
    %%%%%:   61-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   62:
        -:   63:            //Get the vector of Top-Level loops present in the program
    #####:   64:            auto loops = KLoop.getTopLevelLoops();
    %%%%%:   64-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
        -:   65:            //Init a vector of references to BasicBlocks for all BBs in the function
    #####:   66:            std::vector<llvm::BasicBlock *> functionBlocks;
    %%%%%:   66-block  0
Aufruf  0 niemals ausgeführt
    #####:   67:            for(auto &blocks : F){
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   67-block  0
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   67-block  1
    %%%%%:   67-block  2
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    %%%%%:   67-block  3
Aufruf  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
Zweig 11 niemals ausgeführt
    #####:   68:                functionBlocks.push_back(&blocks);
    %%%%%:   68-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   68-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    $$$$$:   68-block  2
        -:   69:            }
        -:   70:
        -:   71:            //Create the ProgramTree for the BBs present in the current function
    #####:   72:            ProgramTree *PT = ProgramTree::construct(functionBlocks);
    %%%%%:   72-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   72-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:   72-block  2
Aufruf  6 niemals ausgeführt
    $$$$$:   72-block  3
Aufruf  7 niemals ausgeführt
    $$$$$:   72-block  4
        -:   73:
        -:   74:            //We need to distinguish if the function contains loops
    #####:   75:            if(!loops.empty()){
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:   76:                //If the function contains loops
        -:   77:                //Init a vector for the LoopTrees we will create for the loops
    #####:   78:                std::vector<LoopTree *> trees;
    %%%%%:   78-block  0
Aufruf  0 niemals ausgeführt
        -:   79:                //Init a vector for all the latches of the functions.
    #####:   80:                std::vector<llvm::BasicBlock *> latches;
Aufruf  0 niemals ausgeführt
        -:   81:
        -:   82:                //Iterate over the top-level loops
    #####:   83:                for (auto liiter = loops.begin(); liiter < loops.end(); ++liiter) {
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    %%%%%:   83-block  0
Aufruf  2 niemals ausgeführt
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
        -:   84:                    //Get the loop, the iterator points to
    #####:   85:                    auto topLoop= *liiter;
    %%%%%:   85-block  0
Aufruf  0 niemals ausgeführt
        -:   86:
        -:   87:                    //Construct the LoopTree from the Information of the current top-level loop
    #####:   88:                    LoopTree LT = LoopTree(topLoop, topLoop->getSubLoops(), &handler);
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:   88-block  0
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:   88-block  1
Aufruf  7 niemals ausgeführt
    $$$$$:   88-block  2
Aufruf  8 niemals ausgeführt
    $$$$$:   88-block  3
        -:   89:
        -:   90:                    //Add the constructed tree to the List of LoopTrees
    #####:   91:                    trees.push_back(&LT);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    $$$$$:   91-block  0
        -:   92:
        -:   93:                    //Find all latches in the current loop
    #####:   94:                    for (auto &bb : LT.getLatches()) {
    %%%%%:   94-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:   94-block  1
Aufruf  3 niemals ausgeführt
Aufruf  4 niemals ausgeführt
    %%%%%:   94-block  2
Aufruf  5 niemals ausgeführt
    %%%%%:   94-block  3
Aufruf  6 niemals ausgeführt
    %%%%%:   94-block  4
Aufruf  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
Zweig  9 niemals ausgeführt
    #####:   95:                        latches.push_back(bb);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    #####:   96:                    }
    %%%%%:   96-block  0
Aufruf  0 niemals ausgeführt
    $$$$$:   96-block  1
Aufruf  1 niemals ausgeführt
        -:   97:
        -:   98:                    //Construct a LoopNode for the current loop
    #####:   99:                    LoopNode *LN = LoopNode::construct(&LT, PT);
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
        -:  100:                    //Replace the blocks used by loop in the previous created ProgramTree
    #####:  101:                    PT->replaceNodesWithLoopNode(topLoop->getBlocksVector(), LN);
    %%%%%:  101-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:  101-block  1
Aufruf  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
Zweig  6 niemals ausgeführt
    %%%%%:  101-block  2
Aufruf  7 niemals ausgeführt
    $$$$$:  101-block  3
Aufruf  8 niemals ausgeführt
    $$$$$:  101-block  4
    #####:  102:                }
Aufruf  0 niemals ausgeführt
    $$$$$:  102-block  0
Aufruf  1 niemals ausgeführt
        -:  103:
        -:  104:                //PT->printNodes(&handler);
        -:  105:                //llvm::outs() << "\n\n\n\n";
        -:  106:                //PT->printEdges();
        -:  107:
        -:  108:                //Get the Energy from the ProgramTree and print it
    #####:  109:                llvm::outs() << "Energy used: " << PT->getEnergy(&handler) << " µJ\n";
    %%%%%:  109-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  109-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:  109-block  2
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    %%%%%:  109-block  3
Aufruf  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
Zweig 11 niemals ausgeführt
    %%%%%:  109-block  4
Aufruf 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
Zweig 14 niemals ausgeführt
    #####:  110:            }else{
    %%%%%:  110-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
    $$$$$:  110-block  1
Aufruf  2 niemals ausgeführt
    $$$$$:  110-block  2
Aufruf  3 niemals ausgeführt
        -:  111:                //If we don't have any loops, the ProgramTree needs no further handling, and we can calculate the energy
        -:  112:                //directly
        -:  113:
        -:  114:                //Get the Energy from the ProgramTree and print it
    #####:  115:                llvm::outs() << "Energy used: " << PT->getEnergy(&handler) << " µJ\n";
    %%%%%:  115-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  115-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:  115-block  2
Aufruf  6 niemals ausgeführt
Zweig  7 niemals ausgeführt
Zweig  8 niemals ausgeführt
    %%%%%:  115-block  3
Aufruf  9 niemals ausgeführt
Zweig 10 niemals ausgeführt
Zweig 11 niemals ausgeführt
    %%%%%:  115-block  4
Aufruf 12 niemals ausgeführt
Zweig 13 niemals ausgeführt
Zweig 14 niemals ausgeführt
        -:  116:            }
    #####:  117:        }else{
    %%%%%:  117-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Aufruf  2 niemals ausgeführt
    $$$$$:  117-block  1
Aufruf  3 niemals ausgeführt
    $$$$$:  117-block  2
Aufruf  4 niemals ausgeführt
    $$$$$:  117-block  3
Aufruf  5 niemals ausgeführt
    #####:  118:            llvm::errs() << "Please provide an energyfile with -m <path to the energy.json>" << "\n";
    %%%%%:  118-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Aufruf  2 niemals ausgeführt
        -:  119:        }
        -:  120:
    #####:  121:        return llvm::PreservedAnalyses::all();
    %%%%%:  121-block  0
Aufruf  0 niemals ausgeführt
        -:  122:    }
        -:  123:
function _ZN6Energy10isRequiredEv called 0 returned 0% blocks executed 0%
    #####:  124:    static bool isRequired() { return true; }
    %%%%%:  124-block  0
        -:  125:};
        -:  126:
        -:  127:/**
        -:  128: * Method for providing some basic information about the pass
        -:  129: */
function _Z19getEnergyPluginInfov called 0 returned 0% blocks executed 0%
    #####:  130:llvm::PassPluginLibraryInfo getEnergyPluginInfo() {
        -:  131:    return {LLVM_PLUGIN_API_VERSION, "Energy", LLVM_VERSION_STRING,
function _ZZ19getEnergyPluginInfovENKUlRN4llvm11PassBuilderEE_clES1_ called 0 returned 0% blocks executed 0%
    #####:  132:            [](llvm::PassBuilder &PB) {
    #####:  133:                PB.registerPipelineParsingCallback(
    %%%%%:  133-block  0
Aufruf  0 niemals ausgeführt
Aufruf  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
Zweig  3 niemals ausgeführt
    %%%%%:  133-block  1
Aufruf  4 niemals ausgeführt
    $$$$$:  133-block  2
Aufruf  5 niemals ausgeführt
function _ZZZ19getEnergyPluginInfovENKUlRN4llvm11PassBuilderEE_clES1_ENKUlNS_9StringRefERNS_11PassManagerINS_8FunctionENS_15AnalysisManagerIS5_JEEEJEEENS_8ArrayRefINS0_15PipelineElementEEEE_clES3_S9_SC_ called 0 returned 0% blocks executed 0%
    #####:  134:                        [](llvm::StringRef Name, llvm::FunctionPassManager &FPM,
    $$$$$:  134-block  0
        -:  135:                           llvm::ArrayRef<llvm::PassBuilder::PipelineElement>) {
    #####:  136:                            if (Name == "energy") {
    %%%%%:  136-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  136-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    $$$$$:  136-block  2
Aufruf  6 niemals ausgeführt
    #####:  137:                                FPM.addPass(Energy());
    %%%%%:  137-block  0
Aufruf  0 niemals ausgeführt
Zweig  1 niemals ausgeführt
Zweig  2 niemals ausgeführt
    %%%%%:  137-block  1
Aufruf  3 niemals ausgeführt
Zweig  4 niemals ausgeführt
Zweig  5 niemals ausgeführt
    %%%%%:  137-block  2
Aufruf  6 niemals ausgeführt
    $$$$$:  137-block  3
Aufruf  7 niemals ausgeführt
    #####:  138:                                return true;
        -:  139:                            }
    #####:  140:                            return false;
    %%%%%:  140-block  0
        -:  141:                        });
    #####:  142:            }};
    %%%%%:  142-block  0
        -:  143:}
        -:  144:
        -:  145://Register the pass in llvm, so it is useable with opt
        -:  146:extern "C" LLVM_ATTRIBUTE_WEAK ::llvm::PassPluginLibraryInfo
function llvmGetPassPluginInfo called 0 returned 0% blocks executed 0%
    #####:  147:llvmGetPassPluginInfo() {
    #####:  148:    return getEnergyPluginInfo();
    %%%%%:  148-block  0
Aufruf  0 niemals ausgeführt
        -:  149:}
